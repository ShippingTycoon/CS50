#include <stdio.h>
#include <cs50.h>
#include <stdlib.h>

char alphalower[26] = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
char alphaupper[26] = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};

int main(int argc, string argv[])
{
    if (argc == 2)//checks if the user has specified the cypher key in the command prompt
    {//need to check if the user isn't cooperating

        string key = (argv[1]);
        int k = atoi(key);

    string p = get_string("plaintext: ");// asks user for plaintext
    printf("cyphertext: ");// begins output

    for (int i = 0; p[i] != '\0'; i ++)//runs through chars in p until end of string
    {
        int c;
        char ct;
        int r = 1;
        if (p[i] >= 'a' && p[i] <= 'z')
        {
            c = (p[i] + k);
            if (c > 'z')
            {
                r = (c - 122) % 26;
                ct = 'a' + (r - 1);
            }
            else
            {
                ct = (p[i] + k);
            }

        }
        if (p[i] >= 'A' && p[i] <= 'Z')
        {
            do
            {
                c = (p[i] + k);
                k = k - (p[i] + k - 'Z');

            }
            while (c > 'Z');
        }
        printf("%c", ct);
        k = atoi(key);
    }
    if (argv[1] <= 0)
    {
        printf("Missing command-line argument\n");
        return 1;
    }
    printf("\n");
    return 0;
}}
